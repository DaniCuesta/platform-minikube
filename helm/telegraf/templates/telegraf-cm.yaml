apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configMapName }}
  labels:
    app.kubernetes.io/name: {{ .Values.selectorLabels.name }}
    app.kubernetes.io/instance: {{ .Values.selectorLabels.instance }}
data:
  telegraf.conf: |+
    # Correct TOML syntax
    [agent]
      interval = "10s"
      round_interval = true
      metric_batch_size = 1000
      metric_buffer_limit = 10000
      collection_jitter = "0s"
      flush_interval = "10s"
      flush_jitter = "0s"
      precision = ""

    [[outputs.influxdb_v2]]
      urls = ["http://influxdb2.cicd.svc.cluster.local:8086"]
      bucket = "KUBE_INVENTORY"
      token = "UxDdvLxdYdcDwLIEiER7OE"
      organization = "DES" 
      [outputs.influxdb_v2.tagpass]
        influxdb_bucket = ["KUBE_INVENTORY"]

    [[outputs.influxdb_v2]]
      urls = ["http://influxdb2.cicd.svc.cluster.local:8086"]
      bucket = "KAFKA"
      token = "UxDdvLxdYdcDwLIEiER7OE"
      organization = "DES" 
      [outputs.influxdb_v2.tagpass]
        influxdb_bucket = ["KAFKA"]

    [[inputs.kube_inventory]]
      url = "https://kubernetes.default.svc"
      bearer_token = "/var/run/secrets/kubernetes.io/serviceaccount/token"
      insecure_skip_verify = true
      response_timeout = "5s"
      namespace = ""
      [inputs.kube_inventory.tags]
        influxdb_bucket = "KUBE_INVENTORY"

    [[inputs.zookeeper]]
      ## Lista de servidores para recolectar métricas.
      ## Utiliza el nombre del servicio y el puerto interno ya que ambos corren dentro de Minikube.
      servers = ["zookeeper-service.kafka.svc.cluster.local:2181"]
      ## Tiempo máximo de espera para la recolección de métricas de todos los servidores.
      timeout = "5s"
      [inputs.zookeeper.tags]
        influxdb_bucket = "KAFKA"

    [[inputs.kafka_consumer]]
      brokers = ["kafka-service.kafka.svc.cluster.local:9092"]
      topics = ["nombre_del_topico"]
      consumer_group = "telegraf_consumer_group"
      offset = "oldest"
      data_format = "influx"
      ## Añadir etiqueta del bucket de InfluxDB específico para los datos de Kafka
      [inputs.kafka_consumer.tags]
        influxdb_bucket = "KAFKA"


    # Processor para convertir el campo avg_latency a float y cambiar el nombre
    [[processors.rename]]
      [[processors.rename.replace]]
        field = "avg_latency"
        dest = "avg_latency_float"

    [[processors.converter]]
      [processors.converter.fields]
        float = ["avg_latency_float"]

    # Aplicar solo a los datos provenientes de zookeeper
    namepass = ["zookeeper"]




