apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-service
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-service  # Debe coincidir con las etiquetas en la plantilla de pod
  template:
    metadata:
      labels:
        app: kafka-service  # Etiquetas que coinciden con el selector
    spec:
      containers:
      - name: kafka-service
        image: docker.io/bitnami/kafka:3.6.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
        - containerPort: 5555  # Puerto para exposición de métricas
        command:
        - sh
        - -c
        - |
          export KAFKA_OPTS="-javaagent:/opt/prometheus/jmx_prometheus_javaagent.jar=5555:/etc/kafka/jmx-exporter-config.yml"
          /opt/bitnami/kafka/bin/kafka-server-start.sh /opt/bitnami/kafka/config/server.properties
        env:
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper-service:2181"
          - name: KAFKA_LISTENERS
            value: "LISTENER_INTERNAL://0.0.0.0:9092"
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "LISTENER_INTERNAL://kafka-service:9092"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "LISTENER_INTERNAL:PLAINTEXT"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: "LISTENER_INTERNAL"
          - name: KAFKA_BROKER_ID
            value: "1"
        volumeMounts:
          - name: kafka-storage
            mountPath: /var/lib/kafka
          - name: jmx-exporter-config
            mountPath: /etc/kafka
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: kafka-pvc
        - name: jmx-exporter-config
          configMap:
            name: kafka-jmx-exporter-config










